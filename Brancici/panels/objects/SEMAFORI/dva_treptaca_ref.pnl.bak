V 13
2
LANG:10001 0 
LANG:10024 0 
PANEL,-1 -1 239 362 N "_3DFace" 3
"$ORMAR"
"$TREP_D"
"$TREP_G"
E E E E E 1 -1 -1 0  37 23
""0  1
E E 2
"CBRef" "1"
"EClose" E
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:10001 0 
0
LAYER, 1 
1
LANG:10001 0 
0
LAYER, 2 
1
LANG:10001 0 
6 0
"RECTANGLE1"
""
1 37 23 E E E 1 E 1 E N "STD_textfield_text" E N {102,102,102} E E
 E E
0 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:10024 0 

2
"dashclr"N "_Transparent"
"antiAliased" "0"
"// SimpleCtrlScriptStart {invalid}
main()
{
     EP_setColor();
}

void EP_setColor()
{
  string ormar;
  dpGet(sys_name+$ORMAR+\".ormar\",ormar);
  int rc;
  string alarm;

  if( !dpExists( sys_name+ormar+\".ConnState:_alert_hdl.._act_state_color\")) //\"SysDrivusa:\"+\"ormar\"+\".ConnState:_alert_hdl.._act_state_color\"
  {
    setValue(\"\", \"color\", \"_dpdoesnotexist\");
    return;
  }

  rc = dpConnect(\"EP_setColorCB\", sys_name+ormar+\".ConnState:_alert_hdl.._act_state_color\", sys_name+ormar+\".ConnState:_online.._bad\");

  if ( sdGetLastError() < 0 || rc != 0)
    setValue(\"\", \"color\", \"_dpdoesnotexist\");
}


void EP_setColorCB(string dpSource, string sNewColor, string dpSource2, bool bInvalid)
{   
  if(bInvalid)
  setValue(\"\", \"color\", \"_dpdoesnotexist\");
  else
  setValue(\"\", \"color\", \"\");
  
  DebugN(\"U funkciji\");
  setValue(\"\", \"color\", sNewColor);
}

" 0
 "// SimpleCtrlScriptStart {invalid}
main()
{
  EP_childPanelOn();
}

void EP_childPanelOn()
{
  ChildPanelOnRelativ(\"semafor_blink.pnl\",\"Blinker\",makeDynString(\"$ORMAR:\" + $ORMAR, \"$TREP_D:\" + $TREP_D, \"$TREP_G:\" + $TREP_G),50, -90);
 // ChildPanelOnRelativ(\"semafor_blink.pnl\",\"Blinker\",makeDynString(\"$ORMAR:\" + $ORMAR, \"$TREP_D:\" + $TREP_D, \"$TREP_G:\" + $TREP_G),50, -90);
}

// SimpleCtrlScript {EP_childPanelOn}
// Function {ChildPanelOnCentral}
// File {semafor_blink.pnl}
// Panel {}
// Parent {}
// Module {}
// OffsetX {0}
// OffsetY {0}
// PanelPara1 {$ORMAR:$ORMAR}
// PanelPara2 {$TREP_D:$TREP_D}
// PanelPara3 {$TREP_G:$TREP_G}
// SimpleCtrlScriptEnd {EP_childPanelOn}

" 0
 0 2 3 0 1 E 1 0 1 120 18 1 E 37 23 63 48
7 1
"ELLIPSE1"
""
1 53 77 E E E 1 E 1 E N "STD_textfield_text" E N {153,153,153} E E
 E E
1 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:10024 0 

2
"dashclr"N "_Transparent"
"antiAliased" "1"
"// SimpleCtrlScriptStart {invalid}
main()
{
  EP_setBackColor();
}

EP_setBackColor()
{
dyn_errClass err;

  if( !dpExists( sys_name + $TREP_G+\".command.zuto:_online.._value\"))
  {
    setValue(\"\", \"color\", \"_dpdoesnotexist\");
    return;
  }

  dpConnect(\"EP_setBackColorCB\", 
            sys_name + $TREP_G+\".command.zuto:_online.._value\", sys_name + $TREP_G+\".command.zuto:_online.._bad\");
  err = getLastError();
  if (dynlen(err) > 0)
    setValue(\"\", \"color\", \"_dpdoesnotexist\");

}


EP_setBackColorCB(string dpSource, bool boNewValue, string dpSource2, bool bInvalid)
{
  if(bInvalid)
  setValue(\"\", \"color\", \"_dpdoesnotexist\");
  else
  setValue(\"\", \"color\", \"\");
  
  if (!boNewValue)
    setValue(\"\", \"backCol\", \"{0,0,0}\");
  else
    setValue(\"\", \"backCol\", \"<yellow,3,STD_textfield_text,3>\");
}

// SimpleCtrlScript {EP_setBackColor}
// DP {s1.response.zuto}
// DPConfig {:_online.._value}
// DPType {bool}
// AlertHdl {FALSE}
// DPEInvalid {}
// DPEConfigInvalid {}
// Operator1 {notequal}
// Operant1 {0}
// Color1 {\\{0,0,0\\}}
// Operator2 {equal}
// Operant2 {1}
// Color2 {<yellow,3,STD_textfield_text,3>}
// SimpleCtrlScriptEnd {EP_setBackColor}



" 0
 "// SimpleCtrlScriptStart {invalid}
main()
{
  EP_childPanelOn();
}

void EP_childPanelOn()
{
  ChildPanelOnRelativ(\"semafor_blink.pnl\",\"Blinker\",makeDynString(\"$ORMAR:\" + $ORMAR, \"$TREP_D:\" + $TREP_D, \"$TREP_G:\" + $TREP_G),50, -90);
}

// SimpleCtrlScript {EP_childPanelOn}
// Function {ChildPanelOnCentral}
// File {semafor_blink.pnl}
// Panel {}
// Parent {}
// Module {}
// OffsetX {0}
// OffsetY {0}
// PanelPara1 {$ORMAR:$ORMAR}
// PanelPara2 {$TREP_D:$TREP_D}
// PanelPara3 {$TREP_G:$TREP_G}
// SimpleCtrlScriptEnd {EP_childPanelOn}

" 0
 0 2 3 0 1 E 1 0 1 116 -24 1 E 53 77 12 12
6 2
"RECTANGLE2"
""
1 37 23 E E E 1 E 1 E N "STD_textfield_text" E N {102,102,102} E E
 E E
2 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:10024 0 

2
"dashclr"N "_Transparent"
"antiAliased" "0"
"// SimpleCtrlScriptStart {invalid}
main()
{
     EP_setColor();
}

void EP_setColor()
{
  string ormar;
  dpGet(sys_name+$ORMAR+\".ormar\",ormar);
  int rc;
  string alarm;

  if( !dpExists( sys_name+ormar+\".ConnState:_alert_hdl.._act_state_color\")) //\"SysDrivusa:\"+\"ormar\"+\".ConnState:_alert_hdl.._act_state_color\"
  {
    setValue(\"\", \"color\", \"_dpdoesnotexist\");
    return;
  }

  rc = dpConnect(\"EP_setColorCB\", sys_name+ormar+\".ConnState:_alert_hdl.._act_state_color\", sys_name+ormar+\".ConnState:_online.._bad\");

  if ( sdGetLastError() < 0 || rc != 0)
    setValue(\"\", \"color\", \"_dpdoesnotexist\");
}


void EP_setColorCB(string dpSource, string sNewColor, string dpSource2, bool bInvalid)
{   
  if(bInvalid)
  setValue(\"\", \"color\", \"_dpdoesnotexist\");
  else
  setValue(\"\", \"color\", \"\");
  
  DebugN(\"U funkciji\");
  setValue(\"\", \"color\", sNewColor);
}

" 0
 "// SimpleCtrlScriptStart {invalid}
main()
{
  EP_childPanelOn();
}

void EP_childPanelOn()
{
  ChildPanelOnRelativ(\"semafor_blink.pnl\",\"Blinker\",makeDynString(\"$ORMAR:\" + $ORMAR, \"$TREP_D:\" + $TREP_D, \"$TREP_G:\" + $TREP_G),50, -90);
}

// SimpleCtrlScript {EP_childPanelOn}
// Function {ChildPanelOnCentral}
// File {semafor_blink.pnl}
// Panel {}
// Parent {}
// Module {}
// OffsetX {0}
// OffsetY {0}
// PanelPara1 {$ORMAR:$ORMAR}
// PanelPara2 {$TREP_D:$TREP_D}
// PanelPara3 {$TREP_G:$TREP_G}
// SimpleCtrlScriptEnd {EP_childPanelOn}

" 0
 0 2 3 0 1 E 1 0 1 120 213 1 E 37 23 63 48
7 3
"ELLIPSE2"
""
1 53 77 E E E 1 E 1 E N "STD_textfield_text" E N {153,153,153} E E
 E E
3 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:10024 0 

2
"dashclr"N "_Transparent"
"antiAliased" "1"
"// SimpleCtrlScriptStart {invalid}
main()
{
  EP_setBackColor();
}

EP_setBackColor()
{
dyn_errClass err;

  if( !dpExists(sys_name + $TREP_D+\".command.zuto:_online.._value\"))
  {
    setValue(\"\", \"color\", \"_dpdoesnotexist\");
    return;
  }

  dpConnect(\"EP_setBackColorCB\", 
            sys_name + $TREP_D+\".command.zuto:_online.._value\", sys_name + $TREP_D+\".command.zuto:_online.._bad\");
  err = getLastError();
  if (dynlen(err) > 0)
    setValue(\"\", \"color\", \"_dpdoesnotexist\");

}


EP_setBackColorCB(string dpSource, bool boNewValue, string dpSource2, bool bInvalid)
{     
  if(bInvalid)
  setValue(\"\", \"color\", \"_dpdoesnotexist\");
  else
  setValue(\"\", \"color\", \"\");
  
  if (!boNewValue)
    setValue(\"\", \"backCol\", \"{0,0,0}\");
  else
    setValue(\"\", \"backCol\", \"<yellow,3,STD_textfield_text,3>\");
}

// SimpleCtrlScript {EP_setBackColor}
// DP {s1.response.zuto}
// DPConfig {:_online.._value}
// DPType {bool}
// AlertHdl {FALSE}
// DPEInvalid {}
// DPEConfigInvalid {}
// Operator1 {notequal}
// Operant1 {0}
// Color1 {\\{0,0,0\\}}
// Operator2 {equal}
// Operant2 {1}
// Color2 {<yellow,3,STD_textfield_text,3>}
// SimpleCtrlScriptEnd {EP_setBackColor}


" 0
 "// SimpleCtrlScriptStart {invalid}
main()
{
  EP_childPanelOn();
}

void EP_childPanelOn()
{
  ChildPanelOnRelativ(\"semafor_blink.pnl\",\"Blinker\",makeDynString(\"$ORMAR:\" + $ORMAR, \"$TREP_D:\" + $TREP_D, \"$TREP_G:\" + $TREP_G),50, -90);
}

// SimpleCtrlScript {EP_childPanelOn}
// Function {ChildPanelOnCentral}
// File {semafor_blink.pnl}
// Panel {}
// Parent {}
// Module {}
// OffsetX {0}
// OffsetY {0}
// PanelPara1 {$ORMAR:$ORMAR}
// PanelPara2 {$TREP_D:$TREP_D}
// PanelPara3 {$TREP_G:$TREP_G}
// SimpleCtrlScriptEnd {EP_childPanelOn}

" 0
 0 2 3 0 1 E 1 0 1 116 171 1 E 53 77 12 12
10 5
"POLYGON2"
""
1 77 110 E E E 1 E 1 E N "STD_textfield_text" E N {153,153,153} E E
 E E
5 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:10024 0 

2
"dashclr"N "_Transparent"
"antiAliased" "1"
E E 0 2 3 0 1 E 1 0 0.5555555555555556 106 -33.11111111111111 1 E 3 77 110
77 128
52 118
 1
10 7
"POLYGON3"
""
1 77 110 E E E 1 E 1 E N "STD_textfield_text" E N {153,153,153} E E
 E E
7 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:10024 0 

2
"dashclr"N "_Transparent"
"antiAliased" "1"
E E 0 2 3 0 1 E 1 0 0.5555555555555556 106 201.8888888888889 1 E 3 77 110
77 128
52 118
 1
0
LAYER, 3 
1
LANG:10001 0 
0
LAYER, 4 
1
LANG:10001 0 
0
LAYER, 5 
1
LANG:10001 0 
0
LAYER, 6 
1
LANG:10001 0 
0
LAYER, 7 
1
LANG:10001 0 
0
0
