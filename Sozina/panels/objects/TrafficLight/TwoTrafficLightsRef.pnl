V 14
3
LANG:10001 0 
LANG:10024 0 
LANG:10027 0 
PANEL,-1 -1 116 273 N "_3DFace" 3
"$SYSTEMNAME"
"$TRAFFIC_LIGHT_BOTTOM"
"$TRAFFIC_LIGHT_UPPER"
E E E E E 1 -1 -1 0  79 43
""0  1
E E 3
"CBRef" "1"
"EClose" E
"dpi" "120"
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:10001 0 
0
LAYER, 1 
1
LANG:10001 0 
6 0
"RECTANGLE1"
""
1 63 53 E E E 1 E 1 E N "STD_textfield_text" E N "STD_undifined" E E
 E E
0 0 0 0 0 0
E E E
0
3
LANG:10001 0 
LANG:10024 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
"#uses \"log\"

main()
{
  int rc;
  string plcName;
  if(!getDP($SYSTEMNAME + $TRAFFIC_LIGHT_BOTTOM + \".settings.plcNameForTrafficLight\", plcName)) return;

  string datapoint = $SYSTEMNAME + plcName + \".ConnState\";

  if( !dpExists(datapoint))
  {
    Log::error(\"dpExists\", \"Failed to get dp <%s>.\", datapoint);
    setValue(\"\", \"color\", \"\");
    return;
  }

  rc = dpConnect(\"setBackgroundColor\", datapoint);

  if ( sdGetLastError() < 0 || rc != 0){
    Log::error(\"dpConnect\", \"Failed to connect to dp <%s>.\", datapoint);
    return;
  }
}


void setBackgroundColor(string dpSource, int plcConnectionState)
{
  string backColor =  (plcConnectionState == 0) ? \"stoerKamUnq\" : \"\";
  setValue(\"\", \"color\", backColor);
}
" 0
 "main()
{
   ChildPanelOnRelativ(\"TrafficLight/ManageTwoTrafficLights.pnl\",\"Semafor\",makeDynString(\"$TRAFFIC_LIGHT_UPPER:\" + $TRAFFIC_LIGHT_UPPER, \"$TRAFFIC_LIGHT_BOTTOM:\" + $TRAFFIC_LIGHT_BOTTOM, \"$SYSTEMNAME:\" + $SYSTEMNAME), 50, -90);
}
" 0
 0 2 3 0 1 E 0.0003092473796804825 -0.3839018713880328 0.386345121367851 0.0003006650392384758 -8.730600877571675 263.1698826503664 1 E 63 53 105 160
7 1
"ELLIPSE1"
""
1 117.7038447085092 55.0010568913741 E E E 1 E 1 E N "STD_textfield_text" E N {0,0,0} E E
 E E
1 0 0 0 0 0
E E E
0
3
LANG:10001 0 
LANG:10024 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "1"
"#uses \"log\"

main()
{
  int rc;
  string datapoint = $SYSTEMNAME + $TRAFFIC_LIGHT_BOTTOM + \".state.red\";

  if( !dpExists(datapoint))
  {
    Log::error(\"dpExists\", \"Failed to get dp <%s>.\", datapoint);
    return;
  }

  rc = dpConnect(\"setBackgroundColor\", datapoint);

  if ( sdGetLastError() < 0 || rc != 0){
    Log::error(\"dpConnect\", \"Failed to connect to dp <%s>.\", datapoint);
    return;
  }
}


void setBackgroundColor(string dpSource, bool trafficLightColor)
{
  string backColor =  (trafficLightColor) ? \"red\" : \"\";
  setValue(\"\", \"color\", backColor);
}
" 0
 "main()
{
   ChildPanelOnRelativ(\"TrafficLight/ManageTwoTrafficLights.pnl\",\"Semafor\",makeDynString(\"$TRAFFIC_LIGHT_UPPER:\" + $TRAFFIC_LIGHT_UPPER, \"$TRAFFIC_LIGHT_BOTTOM:\" + $TRAFFIC_LIGHT_BOTTOM, \"$SYSTEMNAME:\" + $SYSTEMNAME), 50, -90);
}
" 0
 0 2 3 1 1 E 0.0003388007493600925 -0.3887156879571619 0.4155000171319295 0.0002988491680170531 -12.67302704617239 285.1094196715504 1 E 139 76 14 14
7 2
"ELLIPSE2"
""
1 117.6774457510611 20.6637054647054 E E E 1 E 1 E N "STD_textfield_text" E N {0,0,0} E E
 E E
2 0 0 0 0 0
E E E
0
3
LANG:10001 0 
LANG:10024 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "1"
"#uses \"log\"

main()
{
  int rc;
  string datapoint = $SYSTEMNAME + $TRAFFIC_LIGHT_BOTTOM + \".state.yellow\";

  if( !dpExists(datapoint))
  {
    Log::error(\"dpExists\", \"Failed to get dp <%s>.\", datapoint);
    return;
  }

  rc = dpConnect(\"setBackgroundColor\", datapoint);

  if ( sdGetLastError() < 0 || rc != 0){
    Log::error(\"dpConnect\", \"Failed to connect to dp <%s>.\", datapoint);
    return;
  }
}


void setBackgroundColor(string dpSource, bool trafficLightColor)
{
  string backColor =  (trafficLightColor) ? \"yellow\" : \"\";
  setValue(\"\", \"color\", backColor);
}
" 0
 "main()
{
   ChildPanelOnRelativ(\"TrafficLight/ManageTwoTrafficLights.pnl\",\"Semafor\",makeDynString(\"$TRAFFIC_LIGHT_UPPER:\" + $TRAFFIC_LIGHT_UPPER, \"$TRAFFIC_LIGHT_BOTTOM:\" + $TRAFFIC_LIGHT_BOTTOM, \"$SYSTEMNAME:\" + $SYSTEMNAME), 50, -90);
}
" 0
 0 2 3 1 1 E 0.0003477165585537792 -0.3887156879571619 0.4264342281090855 0.0002988491680170531 0.2785809261926404 285.1094196715504 1 E 139 76 14 14
7 3
"ELLIPSE3"
""
1 117.6507967346169 -13.99889985304814 E E E 1 E 1 E N "STD_textfield_text" E N {0,0,0} E E
 E E
3 0 0 0 0 0
E E E
0
3
LANG:10001 0 
LANG:10024 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "1"
"#uses \"log\"

main()
{
  int rc;
  string datapoint = $SYSTEMNAME + $TRAFFIC_LIGHT_BOTTOM + \".state.green\";

  if( !dpExists(datapoint))
  {
    Log::error(\"dpExists\", \"Failed to get dp <%s>.\", datapoint);
    return;
  }

  rc = dpConnect(\"setBackgroundColor\", datapoint);

  if ( sdGetLastError() < 0 || rc != 0){
    Log::error(\"dpConnect\", \"Failed to connect to dp <%s>.\", datapoint);
    return;
  }
}


void setBackgroundColor(string dpSource, bool trafficLightColor)
{
  string backColor =  (trafficLightColor) ? \"green\" : \"\";
  setValue(\"\", \"color\", backColor);
}
" 0
 "main()
{
   ChildPanelOnRelativ(\"TrafficLight/ManageTwoTrafficLights.pnl\",\"Semafor\",makeDynString(\"$TRAFFIC_LIGHT_UPPER:\" + $TRAFFIC_LIGHT_UPPER, \"$TRAFFIC_LIGHT_BOTTOM:\" + $TRAFFIC_LIGHT_BOTTOM, \"$SYSTEMNAME:\" + $SYSTEMNAME), 50, -90);
}
" 0
 0 2 3 1 1 E 0.0003477165585537792 -0.3887156879571619 0.4264342281090855 0.0002988491680170531 14.06255305162819 285.1094196715504 1 E 139 76 14 14
10 4
"POLYGON1"
""
1 108 75 E E E 1 E 1 E N "STD_textfield_text" E N "STD_undifined" E E
 E E
4 0 0 0 0 0
E E E
0
3
LANG:10001 0 
LANG:10024 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "1"
E E 0 2 3 0 1 E -0.465978400333779 0 0.3780772718462955 66.68593653377614 228.9666678514139 4 "[linear,pad,0,0,1.39,1.23,0,{0,0,0},1,{255,255,255}]" E 3 78 28
78 45
105 37
 1
6 5
"RECTANGLE2"
""
1 67 99 E E E 1 E 1 E N "STD_textfield_text" E N {102,102,102} E E
 E E
5 0 0 0 0 0
E E E
0
3
LANG:10001 0 
LANG:10024 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 2 3 0 1 E 0.465978400333779 0 0.3780772718462955 -14.86028352463519 219.8928133271028 4 "[linear,pad,0,0,1.39,1.23,0,{0,0,0},1,{255,255,255}]" E 98 59 129 63
6 6
"RECTANGLE3"
""
1 63 53 E E E 1 E 1 E N "STD_textfield_text" E N "STD_undifined" E E
 E E
6 0 0 0 0 0
E E E
0
3
LANG:10001 0 
LANG:10024 0 
LANG:10027 0 

4
"sizePolicy" "Preferred Preferred"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
"#uses \"log\"

main()
{
  int rc;
  string plcName;
  if(!getDP($SYSTEMNAME + $TRAFFIC_LIGHT_UPPER + \".settings.plcNameForTrafficLight\", plcName)) return;

  string datapoint = $SYSTEMNAME + plcName + \".ConnState\";

  if( !dpExists(datapoint))
  {
    Log::error(\"dpExists\", \"Failed to get dp <%s>.\", datapoint);
    setValue(\"\", \"color\", \"\");
    return;
  }

  rc = dpConnect(\"setBackgroundColor\", datapoint);

  if ( sdGetLastError() < 0 || rc != 0){
    Log::error(\"dpConnect\", \"Failed to connect to dp <%s>.\", datapoint);
    return;
  }
}


void setBackgroundColor(string dpSource, int plcConnectionState)
{
  string backColor =  (plcConnectionState == 0) ? \"stoerKamUnq\" : \"\";
  setValue(\"\", \"color\", backColor);
}
" 0
 "main()
{
   ChildPanelOnRelativ(\"TrafficLight/ManageTwoTrafficLights.pnl\",\"Semafor\",makeDynString(\"$TRAFFIC_LIGHT_UPPER:\" + $TRAFFIC_LIGHT_UPPER, \"$TRAFFIC_LIGHT_BOTTOM:\" + $TRAFFIC_LIGHT_BOTTOM, \"$SYSTEMNAME:\" + $SYSTEMNAME), 50, -90);
}
" 0
 0 2 3 0 1 E 0.0003092473796804823 -0.383555468641815 0.3863451213678509 0.0003003937428394575 -8.730600877571662 66.58065046343316 1 E 63 53 105 160
7 7
"ELLIPSE4"
""
1 117.7038447085092 55.0010568913741 E E E 1 E 1 E N "STD_textfield_text" E N {0,0,0} E E
 E E
7 0 0 0 0 0
E E E
0
3
LANG:10001 0 
LANG:10024 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "1"
"#uses \"log\"

main()
{
  int rc;
  string datapoint = $SYSTEMNAME + $TRAFFIC_LIGHT_UPPER + \".state.red\";

  if( !dpExists(datapoint))
  {
    Log::error(\"dpExists\", \"Failed to get dp <%s>.\", datapoint);
    return;
  }

  rc = dpConnect(\"setBackgroundColor\", datapoint);

  if ( sdGetLastError() < 0 || rc != 0){
    Log::error(\"dpConnect\", \"Failed to connect to dp <%s>.\", datapoint);
    return;
  }
}


void setBackgroundColor(string dpSource, bool trafficLightColor)
{
  string backColor =  (trafficLightColor) ? \"red\" : \"\";
  setValue(\"\", \"color\", backColor);
}
" 0
 "main()
{
   ChildPanelOnRelativ(\"TrafficLight/ManageTwoTrafficLights.pnl\",\"Semafor\",makeDynString(\"$TRAFFIC_LIGHT_UPPER:\" + $TRAFFIC_LIGHT_UPPER, \"$TRAFFIC_LIGHT_BOTTOM:\" + $TRAFFIC_LIGHT_BOTTOM, \"$SYSTEMNAME:\" + $SYSTEMNAME), 50, -90);
}
" 0
 0 2 3 1 1 E 0.0003315203971229428 -0.383555468641815 0.4065715053592266 0.000294881931044238 -11.99334625755468 87.78492656416537 1 E 139 76 14 14
7 8
"ELLIPSE5"
""
1 117.6774457510611 20.6637054647054 E E E 1 E 1 E N "STD_textfield_text" E N {0,0,0} E E
 E E
8 0 0 0 0 0
E E E
0
3
LANG:10001 0 
LANG:10024 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "1"
"#uses \"log\"

main()
{
  int rc;
  string datapoint = $SYSTEMNAME + $TRAFFIC_LIGHT_UPPER + \".state.yellow\";

  if( !dpExists(datapoint))
  {
    Log::error(\"dpExists\", \"Failed to get dp <%s>.\", datapoint);
    return;
  }

  rc = dpConnect(\"setBackgroundColor\", datapoint);

  if ( sdGetLastError() < 0 || rc != 0){
    Log::error(\"dpConnect\", \"Failed to connect to dp <%s>.\", datapoint);
    return;
  }
}


void setBackgroundColor(string dpSource, bool trafficLightColor)
{
  string backColor =  (trafficLightColor) ? \"yellow\" : \"\";
  setValue(\"\", \"color\", backColor);
}
" 0
 "main()
{
   ChildPanelOnRelativ(\"TrafficLight/ManageTwoTrafficLights.pnl\",\"Semafor\",makeDynString(\"$TRAFFIC_LIGHT_UPPER:\" + $TRAFFIC_LIGHT_UPPER, \"$TRAFFIC_LIGHT_BOTTOM:\" + $TRAFFIC_LIGHT_BOTTOM, \"$SYSTEMNAME:\" + $SYSTEMNAME), 50, -90);
}
" 0
 0 2 3 1 1 E 0.0003306020580727408 -0.383555468641815 0.4054452685022758 0.000294881931044238 1.585610841675857 87.56231130761927 1 E 139 76 14 14
7 9
"ELLIPSE6"
""
1 117.6507967346169 -13.99889985304814 E E E 1 E 1 E N "STD_textfield_text" E N {0,0,0} E E
 E E
9 0 0 0 0 0
E E E
0
3
LANG:10001 0 
LANG:10024 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "1"
"#uses \"log\"

main()
{
  int rc;
  string datapoint = $SYSTEMNAME + $TRAFFIC_LIGHT_UPPER + \".state.green\";

  if( !dpExists(datapoint))
  {
    Log::error(\"dpExists\", \"Failed to get dp <%s>.\", datapoint);
    return;
  }

  rc = dpConnect(\"setBackgroundColor\", datapoint);

  if ( sdGetLastError() < 0 || rc != 0){
    Log::error(\"dpConnect\", \"Failed to connect to dp <%s>.\", datapoint);
    return;
  }
}


void setBackgroundColor(string dpSource, bool trafficLightColor)
{
  string backColor =  (trafficLightColor) ? \"green\" : \"\";
  setValue(\"\", \"color\", backColor);
}
" 0
 "main()
{
   ChildPanelOnRelativ(\"TrafficLight/ManageTwoTrafficLights.pnl\",\"Semafor\",makeDynString(\"$TRAFFIC_LIGHT_UPPER:\" + $TRAFFIC_LIGHT_UPPER, \"$TRAFFIC_LIGHT_BOTTOM:\" + $TRAFFIC_LIGHT_BOTTOM, \"$SYSTEMNAME:\" + $SYSTEMNAME), 50, -90);
}
" 0
 0 2 3 1 1 E 0.0003317499818854933 -0.383555468641815 0.4068530645734643 0.000294881931044238 14.95386123067715 87.78492656416537 1 E 139 76 14 14
10 10
"POLYGON2"
""
1 108 75 E E E 1 E 1 E N "STD_textfield_text" E N "STD_undifined" E E
 E E
10 0 0 0 0 0
E E E
0
3
LANG:10001 0 
LANG:10024 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "1"
E E 0 2 3 0 1 E -0.4754881636058971 0 0.3780772718462976 68.88306794912558 7.954618817393069 4 "[linear,pad,0,0,1.45,1.07,0,{0,0,0},1,{255,255,255}]" E 3 78 28
78 45
105 37
 1
6 11
"RECTANGLE4"
""
1 67 99 E E E 1 E 1 E N "STD_textfield_text" E N {102,102,102} E E
 E E
11 0 0 0 0 0
E E E
0
3
LANG:10001 0 
LANG:10024 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 2 3 0 1 E 0.4754881636058971 0 0.3780772718462976 -14.32736068190646 -1.119235706917934 4 "[linear,pad,0,0,1.45,1.07,0,{0,0,0},1,{255,255,255}]" E 98 59 129 63
0
LAYER, 2 
1
LANG:10001 0 
0
LAYER, 3 
1
LANG:10001 0 
0
LAYER, 4 
1
LANG:10001 0 
0
LAYER, 5 
1
LANG:10001 0 
0
LAYER, 6 
1
LANG:10001 0 
0
LAYER, 7 
1
LANG:10001 0 
0
0
